version: '3.6'

services:
  db:
    container_name: postgres
    image: postgres:15
    ports:
      - '5432:5432'
    volumes:
      - conerf_postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - conerf_network

  web:
    container_name: django
    build: docker/back
    command: python3 manage.py runserver 0.0.0.0:8000
    # command: uwsgi --ini uwsgi.ini
    tty: true
    volumes:
      - ./back/django:/app
      - ${MNT}:/mnt
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
    networks:
      - conerf_network

  celery:
    container_name: celery
    tty: true
    build: docker/back
    volumes:
      - ./back/django:/app
      - ${MNT}:/mnt
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/hiro/.cache/:/home/user/.cache/
    environment:
      - HOST_ROOT_PATH=$PWD
    command: celery -A app worker -l info
    depends_on:
      - web
      - redis
    networks:
      - conerf_network

  monitor:
    container_name: monitor
    tty: true
    build: docker/back
    volumes:
      - ./back/django:/app
      - ${MNT}:/mnt
    ports:
      - 5555:5555
    command: celery -A app flower --port=5555
    depends_on:
      - web
      - redis
      - celery
    networks:
      - conerf_network

  nextjs:
    container_name: nextjs
    build: docker/front
    command: yarn run dev
    tty: true
    volumes:
      - ./front/conerf:/app
      - ${MNT}:/mnt
    ports:
      - '3000:3000'
    depends_on:
      - web
    networks:
      - conerf_network

  redis:
    container_name: redis
    image: redis:7.2
    restart: always
    tty: true
    ports:
      - 6379:6379
    networks:
      - conerf_network

networks:
  conerf_network:

volumes:
  conerf_postgres:
